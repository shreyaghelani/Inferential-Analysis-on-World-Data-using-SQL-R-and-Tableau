<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1004.1720                               -->
<workbook source-build='10.0.2 (10000.16.1004.1720)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Countries+ (Countries)' inline='true' name='federated.057n8vp05pacu919wlb9x0ov11w1' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-A00GL4A' name='sqlserver.0qwthug1fir23n1bh7jkq1dldtx9'>
            <connection IsolationLevel='ReadUncommitted' authentication='sspi' class='sqlserver' dbname='Countries' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-A00GL4A' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Countries].[Country_Code]' />
              <expression op='[Countries_Metrics].[Country_Code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Countries].[Country_Code]' />
                <expression op='[Countries_Geography].[Country_Code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Countries].[Country_Name]' />
                  <expression op='[Continents].[Country Name]' />
                </expression>
              </clause>
              <relation connection='sqlserver.0qwthug1fir23n1bh7jkq1dldtx9' name='Countries' table='[dbo].[Countries]' type='table' />
              <relation connection='sqlserver.0qwthug1fir23n1bh7jkq1dldtx9' name='Continents' table='[dbo].[Continents]' type='table' />
            </relation>
            <relation connection='sqlserver.0qwthug1fir23n1bh7jkq1dldtx9' name='Countries_Geography' table='[dbo].[Countries_Geography]' type='table' />
          </relation>
          <relation connection='sqlserver.0qwthug1fir23n1bh7jkq1dldtx9' name='Countries_Metrics' table='[dbo].[Countries_Metrics]' type='table' />
        </relation>
        <cols>
          <map key='[Area]' value='[Countries_Geography].[Area]' />
          <map key='[Capital_City]' value='[Countries].[Capital_City]' />
          <map key='[Capital_Latitude]' value='[Countries_Geography].[Capital_Latitude]' />
          <map key='[Capital_Longitude]' value='[Countries_Geography].[Capital_Longitude]' />
          <map key='[Coastline]' value='[Countries_Geography].[Coastline]' />
          <map key='[Commercial_Prime_Lending_Rate]' value='[Countries_Metrics].[Commercial_Prime_Lending_Rate]' />
          <map key='[Continent]' value='[Continents].[Continent]' />
          <map key='[Country Name]' value='[Continents].[Country Name]' />
          <map key='[Country_Code (Countries_Geography)]' value='[Countries_Geography].[Country_Code]' />
          <map key='[Country_Code (Countries_Metrics)]' value='[Countries_Metrics].[Country_Code]' />
          <map key='[Country_Code]' value='[Countries].[Country_Code]' />
          <map key='[Country_Name]' value='[Countries].[Country_Name]' />
          <map key='[Founding_Independence_Date]' value='[Countries].[Founding_Independence_Date]' />
          <map key='[GDP]' value='[Countries_Metrics].[GDP]' />
          <map key='[Government_Type]' value='[Countries].[Government_Type]' />
          <map key='[Health_Expenditure_per_GDP]' value='[Countries_Metrics].[Health_Expenditure_per_GDP]' />
          <map key='[Internet_Users]' value='[Countries_Metrics].[Internet_Users]' />
          <map key='[Labor_Force]' value='[Countries_Metrics].[Labor_Force]' />
          <map key='[Land_Boundaries]' value='[Countries_Geography].[Land_Boundaries]' />
          <map key='[Life_Expectancy]' value='[Countries_Metrics].[Life_Expectancy]' />
          <map key='[Literacy_Rate]' value='[Countries_Metrics].[Literacy_Rate]' />
          <map key='[Military_Expenditure_per_GDP]' value='[Countries_Metrics].[Military_Expenditure_per_GDP]' />
          <map key='[Net_Migration_Rate_per_1000_population]' value='[Countries_Metrics].[Net_Migration_Rate_per_1000_population]' />
          <map key='[Population]' value='[Countries_Metrics].[Population]' />
          <map key='[Renewable_Water_Resources]' value='[Countries_Metrics].[Renewable_Water_Resources]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code]</local-name>
            <parent-name>[Countries]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Name]</local-name>
            <parent-name>[Countries]</parent-name>
            <remote-alias>Country_Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Government_Type]</local-name>
            <parent-name>[Countries]</parent-name>
            <remote-alias>Government_Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Founding_Independence_Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Founding_Independence_Date]</local-name>
            <parent-name>[Countries]</parent-name>
            <remote-alias>Founding_Independence_Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital_City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Capital_City]</local-name>
            <parent-name>[Countries]</parent-name>
            <remote-alias>Capital_City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Continents]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Continents]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code (Countries_Geography)]</local-name>
            <parent-name>[Countries_Geography]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital_Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Capital_Latitude]</local-name>
            <parent-name>[Countries_Geography]</parent-name>
            <remote-alias>Capital_Latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital_Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Capital_Longitude]</local-name>
            <parent-name>[Countries_Geography]</parent-name>
            <remote-alias>Capital_Longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[Countries_Geography]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land_Boundaries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Land_Boundaries]</local-name>
            <parent-name>[Countries_Geography]</parent-name>
            <remote-alias>Land_Boundaries</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coastline</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coastline]</local-name>
            <parent-name>[Countries_Geography]</parent-name>
            <remote-alias>Coastline</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Code (Countries_Metrics)]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Country_Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life_Expectancy]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Life_Expectancy</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Literacy_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Literacy_Rate]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Literacy_Rate</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health_Expenditure_per_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health_Expenditure_per_GDP]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Health_Expenditure_per_GDP</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military_Expenditure_per_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military_Expenditure_per_GDP]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Military_Expenditure_per_GDP</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Renewable_Water_Resources</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Renewable_Water_Resources]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Renewable_Water_Resources</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net_Migration_Rate_per_1000_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net_Migration_Rate_per_1000_population]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Net_Migration_Rate_per_1000_population</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labor_Force</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Labor_Force]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Labor_Force</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet_Users</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet_Users]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Internet_Users</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial_Prime_Lending_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial_Prime_Lending_Rate]</local-name>
            <parent-name>[Countries_Metrics]</parent-name>
            <remote-alias>Commercial_Prime_Lending_Rate</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Area]' role='measure' type='quantitative' />
      <column caption='GDP_per_Capita' datatype='real' name='[Calculation_686798958364741632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[GDP] / [Population]' />
      </column>
      <column caption='Labor Force Participation Rate' datatype='real' name='[Calculation_686798958379274242]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Labor_Force]/[Population]*100' />
      </column>
      <column caption='Internet Users Proportion' datatype='real' name='[Calculation_686798958393823236]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Internet_Users]/[Population]*100' />
      </column>
      <column caption='Capital City' datatype='string' name='[Capital_City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Capital Latitude' datatype='string' name='[Capital_Latitude]' role='dimension' type='nominal' />
      <column caption='Capital Longitude' datatype='string' name='[Capital_Longitude]' role='dimension' type='nominal' />
      <column datatype='real' name='[Coastline]' role='measure' type='quantitative' />
      <column caption='Commercial Prime Lending Rate' datatype='real' name='[Commercial_Prime_Lending_Rate]' role='measure' type='quantitative' />
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column caption='Country Name1' datatype='string' name='[Country Name]' role='dimension' type='nominal' />
      <column caption='Country Code (Countries Geography)' datatype='string' name='[Country_Code (Countries_Geography)]' role='dimension' type='nominal' />
      <column caption='Country Code (Countries Metrics)' datatype='string' name='[Country_Code (Countries_Metrics)]' role='dimension' type='nominal' />
      <column caption='Country Code' datatype='string' name='[Country_Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Founding Independence Date' datatype='date' name='[Founding_Independence_Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column caption='GDP per Capita' datatype='real' name='[GDP_per_Capita]' role='measure' type='quantitative' />
      <column caption='Government Type' datatype='string' name='[Government_Type]' role='dimension' type='nominal' />
      <column caption='Health Expenditure per GDP' datatype='real' name='[Health_Expenditure_per_GDP]' role='measure' type='quantitative' />
      <column caption='Internet Users' datatype='real' name='[Internet_Users]' role='measure' type='quantitative' />
      <column caption='Labor Force' datatype='real' name='[Labor_Force]' role='measure' type='quantitative' />
      <column caption='Land Boundaries' datatype='real' name='[Land_Boundaries]' role='measure' type='quantitative' />
      <column caption='Life Expectancy' datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
      <column caption='Literacy Rate' datatype='real' name='[Literacy_Rate]' role='measure' type='quantitative' />
      <column caption='Military Expenditure per GDP' datatype='real' name='[Military_Expenditure_per_GDP]' role='measure' type='quantitative' />
      <column caption='Net Migration Rate per 1000 population' datatype='real' name='[Net_Migration_Rate_per_1000_population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column caption='Renewable Water Resources' datatype='real' name='[Renewable_Water_Resources]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_686798958364741632]' derivation='Avg' name='[avg:Calculation_686798958364741632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_686798958379274242]' derivation='Avg' name='[avg:Calculation_686798958379274242:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_686798958393823236]' derivation='Avg' name='[avg:Calculation_686798958393823236:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coastline]' derivation='Avg' name='[avg:Coastline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health_Expenditure_per_GDP]' derivation='Avg' name='[avg:Health_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life_Expectancy]' derivation='Avg' name='[avg:Life_Expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Literacy_Rate]' derivation='Avg' name='[avg:Literacy_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Military_Expenditure_per_GDP]' derivation='Avg' name='[avg:Military_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coastline]' derivation='None' name='[none:Coastline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Health_Expenditure_per_GDP]' derivation='None' name='[none:Health_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Area]' derivation='Sum' name='[sum:Area:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_686798958364741632]' derivation='Sum' name='[sum:Calculation_686798958364741632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_686798958379274242]' derivation='Sum' name='[sum:Calculation_686798958379274242:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_686798958393823236]' derivation='Sum' name='[sum:Calculation_686798958393823236:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coastline]' derivation='Sum' name='[sum:Coastline:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercial_Prime_Lending_Rate]' derivation='Sum' name='[sum:Commercial_Prime_Lending_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:ok]' pivot='key' type='ordinal' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP_per_Capita]' derivation='Sum' name='[sum:GDP_per_Capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health_Expenditure_per_GDP]' derivation='Sum' name='[sum:Health_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Internet_Users]' derivation='Sum' name='[sum:Internet_Users:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Labor_Force]' derivation='Sum' name='[sum:Labor_Force:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Land_Boundaries]' derivation='Sum' name='[sum:Land_Boundaries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life_Expectancy]' derivation='Sum' name='[sum:Life_Expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Literacy_Rate]' derivation='Sum' name='[sum:Literacy_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Military_Expenditure_per_GDP]' derivation='Sum' name='[sum:Military_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net_Migration_Rate_per_1000_population]' derivation='Sum' name='[sum:Net_Migration_Rate_per_1000_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Renewable_Water_Resources]' derivation='Sum' name='[sum:Renewable_Water_Resources:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.662595' measure-ordering='alphabetic' measure-percentage='0.337405' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:GDP:ok]' type='palette'>
            <map to='#499894'>
              <bucket>846000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>3163000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>11220000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>20610000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>30060000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>59110000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>111100000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>267100000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>525000000000.0</bucket>
            </map>
            <map to='#499894'>
              <bucket>2276000000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2133000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6593000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>16650000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>27300000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>45300000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>89970000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>190400000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>358900000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>998300000000.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>86690158000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>421000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2505000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7429000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>19200000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>28150000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>54370000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>102700000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>211300000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>407400000000.0</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1518000000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1015000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>4265000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13250000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>22030000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>38870000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>64310000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>131800000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>284700000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>595700000000.0</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3227000000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>906500000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3200000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>11400000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>20780000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>32160000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>61430000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>112600000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>269800000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>526500000000.0</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2387000000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>486000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2898000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7496000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>19680000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>28340000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>55160000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>104600000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>243300000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>421700000000.0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1666000000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1610000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>6213000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>15020000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>26510000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>42670000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>80470000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>165800000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>339000000000.0</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>927800000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>40000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2216000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>7004000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>17030000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>27720000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>45900000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>90410000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>195500000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>361000000000.0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1167000000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1335000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>5750000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>14300000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>25410000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>40020000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>79290000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>150400000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>335400000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>814000000000.0</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16720000000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>698000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3073000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>8204000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>19960000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>29390000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>56270000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>107600000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>243600000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>454300000000.0</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1805000000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1145000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>4450000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13420000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>22250000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>39230000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>67430000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>133400000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>285600000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>673000000000.0</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>4729000000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1270000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4717000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13980000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>22570000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>39640000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>73600000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>134500000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>288500000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>699700000000.0</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4990000000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1458000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>5896000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>14710000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>25470000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>42060000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>79900000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>157600000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>337400000000.0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>926400000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1958000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2005000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>6259000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>16370000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>27140000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>43670000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>81510000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>180000000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>344000000000.0</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>987100000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>911000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3336000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12560000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>20950000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>34000000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>61540000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>118200000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>273200000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>551400000000.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2416000000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>754000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3083000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>9156000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>20260000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>29940000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>57360000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>108400000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>249400000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>478500000000.0</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1845000000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>60000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2222000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>7120000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>17790000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>27970000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>47470000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>94860000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>196600000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>371200000000.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1285000000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1306000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>5235000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14110000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>25130000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>40000000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>78900000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>136000000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>324600000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>771000000000.0</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>13390000000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>952000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3678000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>13110000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>21620000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>34960000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>61630000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>121000000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>282200000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>574100000000.0</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2553000000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>245500000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2404000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>7348000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>18900000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>28000000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>53160000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>101000000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>198700000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>393800000000.0</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1389000000000.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Health_Expenditure_per_GDP:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958393823236:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Health_Expenditure_per_GDP:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Internet_Users:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Literacy_Rate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:GDP:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958379274242:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958379274242:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Land_Boundaries:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Commercial_Prime_Lending_Rate:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Area:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958393823236:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Renewable_Water_Resources:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Net_Migration_Rate_per_1000_population:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Labor_Force:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958364741632:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Military_Expenditure_per_GDP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958364741632:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:GDP_per_Capita:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Literacy_Rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Military_Expenditure_per_GDP:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Coastline:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Coastline:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Coastline:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='alphabetical-order' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP By Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Box and Whisker Plots for GDB By Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+ (Countries)' name='federated.057n8vp05pacu919wlb9x0ov11w1' />
          </datasources>
          <datasource-dependencies datasource='federated.057n8vp05pacu919wlb9x0ov11w1'>
            <column caption='GDP_per_Capita' datatype='real' name='[Calculation_686798958364741632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[GDP] / [Population]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_686798958364741632]' derivation='Sum' name='[sum:Calculation_686798958364741632:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' value='110' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958364741632:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958364741632:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958364741632:qk]</rows>
        <cols>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='GDP vs Literacy Rates vs Technology Penetration'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Comparison of GDP with Literacy Rate and Technology Penetration Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+ (Countries)' name='federated.057n8vp05pacu919wlb9x0ov11w1' />
          </datasources>
          <datasource-dependencies datasource='federated.057n8vp05pacu919wlb9x0ov11w1'>
            <column caption='GDP_per_Capita' datatype='real' name='[Calculation_686798958364741632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[GDP] / [Population]' />
            </column>
            <column caption='Internet Users Proportion' datatype='real' name='[Calculation_686798958393823236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Internet_Users]/[Population]*100' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column caption='Internet Users' datatype='real' name='[Internet_Users]' role='measure' type='quantitative' />
            <column caption='Literacy Rate' datatype='real' name='[Literacy_Rate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_686798958364741632]' derivation='Avg' name='[avg:Calculation_686798958364741632:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_686798958393823236]' derivation='Avg' name='[avg:Calculation_686798958393823236:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Literacy_Rate]' derivation='Avg' name='[avg:Literacy_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958393823236:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Literacy_Rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958393823236:qk]&quot;</bucket>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Literacy_Rate:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958364741632:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958364741632:qk]' value='120' />
            <format attr='width' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values]' value='120' />
            <format attr='title' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values]' scope='rows' value='Percent' />
            <format attr='subtitle' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' value='78' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' />
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958364741632:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-transparency' value='121' />
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values] + [federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Calculation_686798958364741632:qk])</rows>
        <cols>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Health Expenditure vs Military Expenditure'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average Health Expenditure vs Average Military Expenditure by Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+ (Countries)' name='federated.057n8vp05pacu919wlb9x0ov11w1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.057n8vp05pacu919wlb9x0ov11w1'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Health Expenditure per GDP' datatype='real' name='[Health_Expenditure_per_GDP]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
            <column caption='Military Expenditure per GDP' datatype='real' name='[Military_Expenditure_per_GDP]' role='measure' type='quantitative' />
            <column-instance column='[Health_Expenditure_per_GDP]' derivation='Avg' name='[avg:Health_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life_Expectancy]' derivation='Avg' name='[avg:Life_Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Military_Expenditure_per_GDP]' derivation='Avg' name='[avg:Military_Expenditure_per_GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Military_Expenditure_per_GDP:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]&quot;</bucket>
              <bucket>&quot;[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Military_Expenditure_per_GDP:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' direction='ASC' using='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]' />
          <slices>
            <column>[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='font-weight' data-class='subtotal' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' value='false' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='solid' />
            <format attr='div-level' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='4' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Military_Expenditure_per_GDP:qk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Military_Expenditure_per_GDP:qk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk]' />
            </encodings>
            <style>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Health_Expenditure_per_GDP:qk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Military_Expenditure_per_GDP:qk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='101' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.057n8vp05pacu919wlb9x0ov11w1].[Multiple Values] + [federated.057n8vp05pacu919wlb9x0ov11w1].[avg:Life_Expectancy:qk])</rows>
        <cols>([federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk] / [federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Life Expectancy by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+ (Countries)' name='federated.057n8vp05pacu919wlb9x0ov11w1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.057n8vp05pacu919wlb9x0ov11w1'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Expectancy' datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='Attribute' name='[attr:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life_Expectancy]' derivation='Sum' name='[sum:Life_Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter from='&quot;Finland&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Moldova&quot;' />
              <groupfilter from='&quot;Mongolia&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Qatar&quot;' />
              <groupfilter from='&quot;Romania&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Turkmenistan&quot;' />
              <groupfilter from='&quot;Uganda&quot;' function='range' level='[none:Country_Name:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[Longitude (generated)]' field-type='quantitative' max='32379970.831597611' min='-32379970.831597608' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[Latitude (generated)]' field-type='quantitative' max='26293753.790517397' min='-16923460.584921118' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]' num-steps='10' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]' value='Life Expectancy'>
              <formatted-text>
                <run>Life Expectancy</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]' />
              <lod column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
              <tooltip column='[federated.057n8vp05pacu919wlb9x0ov11w1].[attr:Continent:nk]' />
              <geometry column='[federated.057n8vp05pacu919wlb9x0ov11w1].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='text-align' value='left' />
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='198' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.057n8vp05pacu919wlb9x0ov11w1].[Latitude (generated)]</rows>
        <cols>[federated.057n8vp05pacu919wlb9x0ov11w1].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot Matrix'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Correlation Matrix</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+ (Countries)' name='federated.057n8vp05pacu919wlb9x0ov11w1' />
          </datasources>
          <datasource-dependencies datasource='federated.057n8vp05pacu919wlb9x0ov11w1'>
            <column caption='Labor Force Participation Rate' datatype='real' name='[Calculation_686798958379274242]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Labor_Force]/[Population]*100' />
            </column>
            <column caption='Internet Users Proportion' datatype='real' name='[Calculation_686798958393823236]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Internet_Users]/[Population]*100' />
            </column>
            <column caption='Country Name' datatype='string' name='[Country_Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column caption='Internet Users' datatype='real' name='[Internet_Users]' role='measure' type='quantitative' />
            <column caption='Labor Force' datatype='real' name='[Labor_Force]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[Life_Expectancy]' role='measure' type='quantitative' />
            <column caption='Literacy Rate' datatype='real' name='[Literacy_Rate]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Country_Name]' derivation='None' name='[none:Country_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_686798958379274242]' derivation='Sum' name='[sum:Calculation_686798958379274242:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_686798958393823236]' derivation='Sum' name='[sum:Calculation_686798958393823236:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life_Expectancy]' derivation='Sum' name='[sum:Life_Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Literacy_Rate]' derivation='Sum' name='[sum:Literacy_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='154' />
                <format attr='maxwidth' value='154' />
                <format attr='minheight' value='111' />
                <format attr='maxheight' value='111' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Literacy_Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
          </pane>
          <pane id='7' x-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958393823236:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
          </pane>
          <pane id='8' x-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958379274242:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='136' />
                <format attr='maxwidth' value='136' />
                <format attr='minheight' value='100' />
                <format attr='maxheight' value='100' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' x-axis-name='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='154' />
                <format attr='maxwidth' value='154' />
                <format attr='minheight' value='111' />
                <format attr='maxheight' value='111' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:GDP:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Literacy_Rate:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958379274242:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958393823236:qk] + [federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Population:qk])))))</rows>
        <cols>([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:GDP:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Literacy_Rate:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958379274242:qk] + ([federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958393823236:qk] + [federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Population:qk])))))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='44'>
    <window class='worksheet' name='Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Calculation_686798958364741632:qk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:GDP_per_Capita:ok]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[sum:Life_Expectancy:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Health Expenditure vs Military Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GDP By Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GDP vs Literacy Rates vs Technology Penetration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Continent:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Government_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatter Plot Matrix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[:Measure Names]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Country_Name:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[none:Government_Type:nk]</field>
            <field>[federated.057n8vp05pacu919wlb9x0ov11w1].[yr:Founding_Independence_Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP By Continent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP vs Literacy Rates vs Technology Penetration' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXAc133nP91z34NrcBH3QQIECJLgJVqibtlRLNmyfCR2fCXObiWbzR61
      2apUNlt7pFJbW5tN7SbOJk52U0kcO7ZkW7Ysy5JsybIpUrxJXASI+wYG5wwGg7m63/4BEiQo
      EAQBzPRg0J8qVhHzet77TU9/512/3+9JQgiBjs4uRJIkSdbaCB0dLdEFoLOr0QWQBBLRRX7x
      9ptcbOtZ55oQN3oGAbjR27vBiiO039jgtTobwqi1ARmHUHn5776Gq/o4DhFnYWaM1378No0n
      nyRbzNPWM0hItVHtWeT/fOMdfu3Xf4PKoiw6Wy4yODyGKaecRw5W8Pqrr1FUf5xyV5wrXQME
      IjJHKuz86V98i8987ks8/aFDWn/SjEDvAbYbNcF4zMKzT5zkcOM+XvnWt9nXfIwffOufGO5u
      ISB7Gbp4FkdJOTW1+6mvLmFsfJy2y+dwF9fy/s/f4sybP8BeUs/p17/P8MB1JqI2gr3nSLj2
      UFGzj8P7q7X+lBmDLoDtRjbiTCzQ0T/GxOQUiipwuVxICIRsorqmllynHYvTg8EgYTEtd8IG
      i4OammrsVjOxpUU621spLCpFQaaqpobcbAdGqwuTLGM1mzT+kJmDLoDtRpL57Be/yOV3XuV8
      Wx8f/9QLvPPqKzz9sU9QXF6Dz22l/kgzXpeP2kIT51p7yPf5qKlrwGaSOdJ8mFO//CJeaRHF
      4qBwTxXF2Q6q9x/B7fbw0F4f75xr0fpTZgzSrX2AcDhMLBbT2p4VEokERqM+RckkFEVBlmUk
      SdLaFACysrIkKV03wubn5/F6vVqbobONLCwsYLfbMRgMWpsC6BthOjr6HEBnd5NyAaiKwq1B
      l5JIoCjq8uuqQjyRID0HZDqZSkpnmfPT41y9eJWmJ34J6+I4l7pGkZUYTUcO03L+AmaLEV95
      PSU+TyrN0tnFpFQA3txCqsunABgenKDx8CES/j7G+rqxFtZysNTOpetjFOU4UVUVRVFSaZ5O
      kknH71OzdUaDLKEKEKpANhpBVRFCRZLklaWydFku09keZDn9ppwpFcD0+BC9Q6NYoiYaK/Zw
      7dJFZKOBQ82HaL94jotzMhX7mlYe/nS8YenEdvaSJlPyd5fT8QdN3wfYwYTDYWIdr2IgsWb5
      YmyRyyMXKXAVUplThUFee/09Yi8hr/5UMk0F0nMfQN9q3eFY1PAHBCCEYDY8w/sD77Evv56Z
      0DCnp1o4vOcoOY7cD/wSJ0T6eACkGl0AGYYQgqG5AdomWjhZ8QhZ9myqcmuYCk1yefQCWbZs
      9hc0Yjc7tDY1LdAH2RmEEIKOiVa6p7t4tOoJsuzZK2V5znyeqHkGt9XDz3p+Ss/0DRQ1/VZl
      Uo3eA2QICSXB5ZHzxJU4pyofx2y0fOAao2xkr6+OEm8pLWNXGZzt52DxYayOCg0sTg90AWQA
      S/Elzg2+h9eWxZHSE8j3cfGymx0cLzvJ5MIEl4YvkKXa2F/ZjNeWlSKL0wd9CLTDmV+a492e
      n1LiLaWp6PB9H/5bSJJEgbuQJ2qfwWqy8kdv/iFv33iThLL2ilKmogtgBzMeHOP80BkOFjdT
      lVu7qXV2o2ykMqeG33viP9A+0cofv/Uf6Zm6kQRr0xN9H2AHogqVtzp/xJXBy3zFmYXbbN1S
      fYuOCrL2P4UqVDom2vj6xf9LbV4dnzz4q7it2+eXlY77AHoPsMOIK3G+fvFvuTZ2hc8f+XUc
      Zue21S1LMg2FB/jPv/TfyXX6+K9v/AE/6/4JCSW+bW2kG/okeAexEF3gr8/8OS6Lm3/16L9H
      iSVnGdNitPDc/hc4UXaSb1z6O37R9zM+d+RLVOZkXjYKXQAbQBUqiqpgMmiXjWFyYZw///n/
      5EjpcT66/wUMsoFwLJy09iRJwucq4Hcf/T1ax67y12e+Sl3+fl448GlcVnfS2k01ugDugxCC
      b176ey6PXOBA0UFOlD9MZU51ysQghKDL38H/O/dXfLLpVzhWdjIl7d5ClmSaig9Tl7+fV9u/
      xx+9+Yc8W/88H6p8FKO88x8fzT5BIrpIR2c3RpuHupoKhvs6mQ0l2Fdfh9WUHpMkgNHACB0T
      rfzbx36f9okWvnPtn1iMhThY3Myx0ocoySrb8NLjgyKE4L3+d3mt/fv8s5O/Q3VubVLa2Qhm
      o4UXm36FkxWP8M1L/8B7/e/yueYvU5a9uU202GKA6z39RCMRquoPMNLVSkyF0poGAv4Ramqq
      aGntoKGxEYOcPC9SzVaBrrdcpWRvA/6eVmy5PoYnljhQ7qRrIkrT3rK0WAUSQvDV03/KgaKD
      nKp6AlgeDs0vzXFh6H3OD54hkohwpOQ4x8pOUugqRL6Hx+WDklAT/KD1O7SOX+W3PvSv8bny
      P3BNOBxGavvWPb1BN8qtVaCNogqVy8MXePnaN3mu4RN8qGJjnqQLCwvYbLaVVSAlEaPneitO
      TzaTYSOHqrK5cn0EMxHsZgl7fjWF2cnzWdLUGzQ/L4uO1hak6AJOIWF2FWN12IgtzqEoCqqq
      kkhouynTN9PDRHCMrxz/7VW2uM0enqz+ME9Wf5jp0BQXR97nL0//L5DgYNERjpYcp8BdtOme
      IRwL8/cX/wZVKPybU7+P3Wxf814oioIsVBDqpj8jgBAPfq8PFjVT52tAfYD33vpeZXk56Mk/
      PkIkIeFUE8gGC5IsI1SVWDREIChoLEv+MFMzAbiy8zmYV0xv+zUKy8q43jlKwOHC4fVgMBiQ
      ZVnTxFhCqHyv9dt8vPFTWNdZZy/wFvJR7wt8pP45RuaHuTB0lr88+78xSAaOlT3EyYpHyHHk
      bbjdmcVp/urMn1GRU8WLTb+C2WC+57UGgwFJkjFscQgmSZu71w/6HoPBsPLdhuamCEZUTAaJ
      uMVNbLyP9vAEuQUVhKYSHNxXzYXL12g+dgRTEodAmj1hsiS40dVJ1p5qPC4PtaWLjAVi7K0u
      1cqkVXRMtLMUD3O45OiGrjfKRsqzKyjPruCFxk8zEhji3OAZ/sfbf4zb6uF42UmaS4/jtrjX
      3LEVQjA4189fvfdnPLPvWR6rfpJM3qZxeHMos9hBNmK1WCj1ZRONq9isVpQ8NwajkSNHDpLE
      Zx/Qd4LXRFET/Lef/Beeb3iRxqKmLdUlhKB/ppdzQ2e4OnKRXIePo6UnOLinGY/ViyRJCCG4
      OHyOl65+gy8d+03qCxo3VLdWc4DNko47wTt/HSsJXB29jNlopr6gYct1SZJEZW41lbnVfPrg
      Z+mb6eFs/2l+2PEK+c4Cjpd/iFA0yOm+d/ndU/+OPd706AF3C7oA7kJRFV5peYkvHPvKPWNo
      N4tBNlKTt4/q3L1EExG6/J2cG3yPSHyJ33/qP2XUBtNOQRfAXZwd+AU5zjxq8vYmrQ1JkrCa
      bDQVH6KpWD/pRUsyd5a1CaKJCK+2fY9PNf2q1qbopAhdAHdwuu9dKnKqKPaWaG2KTorQBXCT
      UDTET7p+zAsHPqW1KTopRBcAy0uVb994g/2FjeS7CrU2RyeF6AIAFqJBft77Ns/Wf0xrU3RS
      jC4A4EcdP+BE+cNk23O0NkUnxex6AcwsTnNh6Cwfqfuo1qboaMCuF8CPOr7PY9VP47S4tDZF
      RwM0E4BQFfq7O+kfHkcIwZx/jM7ufhQ1da5JY4FROibaeLL2wylrUye90EwAE93tkL0HgpOM
      T/u5PjBNgQs6B8ZT0r4Qgu+3vswz+57FbranpE2d9EMzV4jsgnzeu3oNAypNOW7suYV4c210
      t46gKPlJD4gZmhtgcLafLxz5Dc0DbzaLlgExm0E/IukO+vqHOXTsKAl/H1NhQTwUJBpWMd8M
      mUtmQIwQgu+3v8xzDZ/AYd2+vDqpRuuAmAclXdyg70SzIVBVbS1DXR2MBhXKSivw2WN09PnZ
      W7Un6W33TN9gLjzLifLUZljQST806wHMdjdNBw+u/F1WXUdZCtpV1ASvtLzEJw58BkMGpPXQ
      2Rq7bhm0bbyFuBqnsejg/S/WyXh2lQASaoJXWl/ihQOf3vZgF52dya4SwKXh89hNDvb66rQ2
      RSdN2DWD4ISa4NW27/LFY7+ZtExuOhtHiYbp6LxBXIHa+gaGblwjLowUlVUTC81RVFzMQF8f
      pRWVSc0Mt2uehNN971LkKU5qqKPOxlElA/WNBygvcDI6OU0wFKOisppcj5252VmmR3uJm1xJ
      ffhhlwggHFvkzc7X+FijHuyiNbeyw5nMFiYGu+mdXKKqJI+y0j1MjvTR3jNCJDTP1a5hyopz
      k27PrhDAz3vfoTq3liJ3sdam7HpubXKGZ4aZCJs5cqgROR5BNdkpLsglGo1idXp55Fgj165d
      J9meYRkvgMVoiLe6Xuf5hhc3dYaWTnKQLS5MiSAt164xH5Mxq4sMTUc4WF9FaXk5VlcOeysK
      SSjJlUDGT4Lf7PoRh/ccJde58fycOsnH6vRyoOmOzH+uUm59Q273cn4kT1b2B9+4zWR0D7AQ
      Wc649mz981qbopOmZKwAhBD8oO27nKp6nCx78n9JdHYmGSsAf2iSa2OXeXrvs1qbopPGaDYH
      CExPMDA6yezkGHuPnmKyu4W4kKjYd4A8z9YCVIQQvNr2XZ6oeUYPdtFZF80E4Mkt4EB2Hhej
      cXLleSY8ZRwpc3Cle5TchmqEEGw2c/toYITuqS4+1/ylTdexExBCILH5+3RHTSm5T+n4XWi6
      CjQ/MYC7oAxJLCHdcUSOqqoIITYdQfS9a9/mI3XPYZLNaRmFtF2oqgpCIG3xwdrKvX4QVHVr
      kWvJQEMBCLqHp2g+VoWBGNG2C1ydN1JQtm9LEWH9M334Fyd4uPJfYjRk9irvrYiwrfo27eaI
      ME2fkOYjRzFIAGaOnjhOQlUxm+59Jtb9UIXKy9e+wccaXsS0ztlaOjq30FAA0qpfBIPRyFZ/
      H9rHW1iKL3G45NgWa9LJJISaYHpqmoQqsLs8eJy3F0YyZoygqAo/aPsuH2/8pO7urLOKMz9+
      iR+e66HArpB36Hk++8zhlbKMEUDL2BUMssz+ggNam6KTZiwuLnH8+DGM4Un6ZmdWlWWMAH7Y
      /gqfPvhZPdRR5wMcffxZDDY3Q50tNJXWryrLmLHCF499hVo91FHnLhbmpvj6336Nc9duEF8Y
      5ztvnV1VnjE9QGlWudYm6KQhocAM4WiCscFeom47n3/+sVXlGdMD6OisxaJi4guf/zzVpQVk
      ed3Mz82vKtcFoJPRCCEwWaxEF4MsxVSsFtOq8owZAunorEVNdTXn33yJKz0LuGKTKI4Cin23
      3eP1HkAn44lEYzQdOcGHHzvOpStXmJ4LrJTpAtDJePZU1REau8GVgSD1+WbabgyslOkCyGBU
      VWX4ah+xcFRrUzQlHg5w/sJFrl18HzWrgseON62UaSgAweTIANdv9JFQBTOTIyv/19keIsEw
      C/4AC/7A/S9OMYlIiJZrV7l06TKBcJTujhYuXrxEIBxjaHAQIVS6u7q25cis69c7OXLyUV78
      2NOMjk+tKtNMACH/EFMxC1XlxUjxIF1DcxR5ZLr6U3NEUqYjhCA4MU9WaR4L04H0C0YxWNjf
      2ESpz8HEyAABxcmhhmp6ewcIBgJMDnZjcOZuS2a4xz/8HMcP76eze5yPPHJ4VZlmq0AjIxMs
      GWxcuthPRXEO9pwCPDk2bowOp+SIpExgvSOShKKyMBWg7GgNw5d7iUdiGO5aAly5NoVHJCmK
      giRJGE0mBm60MRc1Ur/HSceMAYPRjBKPE4nM0zal8PCjNVtu88aFnzLrrONEXRFPP9zEuz1D
      1BTfXgXS7owwjxOzq5SsxARTYYn4YoDIooLF4Uj6EUmZwnpHJAX9AWweB2arGWeum9BUkOzS
      tXMjpTIg5tZ3G5oaYHLJQmNNMQYTRDo7mDCHcGVnkwgqnDpYyuUrrRw7cgB5CwnNFub8jEcK
      EaKQ0JyfkanVvmKaDYF8lftITPUzPKdQUVFFvlOhc3Ca2ko9feFWEUIQmJgjq3j55Htnroeg
      f/4+70otZmcO2XYYHR0lHDfQ1FBFVHKyt6yQiqoqzHYvDfvK2eoU4OBjz7HQ+Q5/8id/wkun
      +/jVZz+0qly7n1jJQO3+267LpVV7KdXMmMwiHokRDUWwZy8fAGj3OkhE4sQjMUzW9IiUM9tc
      1NTceTi5hbKbfzocDgCcLs+W2zGYnXzhN//Fyt8B/xBjUR9FWVbgPj3AO2+9xkwoRniymx+f
      bduyMTqpYcEfwJXvXcmFKskSjmwX4blFjS3TnsjiPMHI7fnOPXuA9vPv8PV//CYl59swJRZ5
      +ONfTomBOltDqIKFyXkK6ktWve4u8DI3PI27wKsnCb6Dewpg/7HH+YPsQnILy7GZDch6oMmO
      ILKwhBBgsVtXvW7z2JnoiqImFAym3bW4MNzfjbegHJfNhCunCPMdCRPWvROdF96l3f82WQ4z
      jSee4HhDZdKN1dk8QgiCk3N4CrOQ7lo/lw0GrE4ri7Mh3Pnee9SQmYSnR3j36gDPP3UCs9VD
      lvn2cvC6cwCb1Ubj0ZM89dRT1JTmJ91Qna0hVLEy/l8LZ56H4OR8+m2KJRlhsiJCE3z/lVe4
      1jW4qmxdAZTubUSdH6OjowP/bDCpRupsncXZBSwOK6Z7bHg5sp0sBRZ3nQBcditT4yO4PS78
      gciqsnUFkFicp/XKeQILQTqHZ9a7VEdjll0f5vDeXPtfC6PZhNVpIzwbSqFl2nPp3FkefvIZ
      ZBGnd3B0Vdm6Amhta+exxx8nshRmZl7vAdKZRDRBeH4RZ6573etc+V5C07vru3zyoy9w/mdv
      0to9yWefe3RV2boC+OUXP8Po8DBmRy6fevpoUo3U2Rqh6QAun/cDk9+7cea5WZxZSMtEtcmi
      t+0yi5ILhwjSNTi5qmz9jbA3Xqfp8Y/xTJOP10+3JtVInc1zy/XBU5h132uNJiMmm5lIcCkF
      lqUH8/MBHv/lF/nyJ5/mwtV24vHbG2HrCsBjM/KTN9/kjbffw+1yJN1Qnc0RDUVQ4wpWp/X+
      FwOOHBcLaeYblExyi0poPf0jXnq7BXd0lNd+dm6lbP0dEZON0j0F1FacoLJsm53U1CUuX+rA
      YLOxb+9epsf6mVmIs3ffXixGPVDtQZgbnia7zIckb+y+eQqyGLzUQ25FAQZT5m9w1jc/Qn3z
      IwDMDHcSsNzeJV/3jlnMMm/+8Pu89eMfcq61d1uNis6OYymooqmhHrMaZGRWobrIQ1ff6P3f
      rLOCmlAIzQRx5a0/+b0Tg9mIyWYhsrB7hkG3SCRixO44e3jdHuDAiScIq1a8vmKyC7b3nF3J
      lk1idJCzQ+1UluZh8WZjd9uIDgyjKErGBMQEZ/2oQ2e2XI+h8jFc7tUbXIqisDA5t+z1aZBR
      HmBi6/J5CE7OYfXaUxoQowWqoiAkCYMsYzCaMBluLxSsK4DXX/465uwiZvu7Ods9yz//xKlt
      MyquStTW7Wd64DpRg4Oof4oFlwu7x51RATFGGazq3JbriaxxPwwGA8GJOQqqfBg2OPy5hTPX
      zezQFDJSRp8QMzdyna/942tIkoEv/dZv4yupI/eO8vV3gkv30NpyjXfePUd9Tdm2GmY2mRjs
      6SRq8rKnsIiKAgdDUxFqywu3tZ1MRqgCNaFi28SpmiaLCaPZSGQhnATL0odr59/j5Me+yDPN
      RVzoHPtA+T1ln4iE8AcT7D/yGL9z6gQ28/YGUpisdvbVN6z87Ssuw6cHgz0Qs0N+vMU5m3Zv
      dua4CU7M4yzaZsPSiJzCUt5641vIiTBxaQKX/Aynmm9nEb+nAM6+8R3CngNEO9+io+YAR8rT
      I5JIZxklrjB8pY8D5Zv37HT5PAxf6cNJ5voGNZ54muKq/fQPT5BXVEpp4eq57D2HQIGFIL0d
      VxgYm+DVl7/Jla6hpBurs3HmR2eIhpa25NtvtluQjXJGrwbNDLbwZ3/zbeKJBK/949c4e9cw
      6J5375lPfoWHI1HgEwBYbJl74vrscBeysrWxsIoBV3EdJtPanpjbiRCC0dZ+ihvLgan7Xb4u
      Lp83o53jWi6f59HnP8Ph2lwaCk189e3LPLTv9pjvngIwW22YrbaUGKk10uwN7NGJLdURk6yo
      hXu3yaL1SUTj+LvHaD7xKPRvrS6Xz0NwLoaqqsgPuJK0FYQS50ZnO5LNR21lEVcunEU22ykq
      qyY0O0l5eRmdnV3U7qvbUnKsovK9vP3ea/Sek0FNcHD/Q6vK9S3XHYi/e4yskjwsjo25PqyH
      2W5BCEF4LvW9QEllBYnIEhBnbnYBb3YeOR47i6EQo/1dOHKKtpwZzpdfyMknnqWu3Ec0rlCY
      71tVrgtghyGEYORqH2XN1dtSnyRJWF02/F2p2YG/tckpGUxYVuYvRk6eehinMcbVjj4ioXlu
      DPnJyXKtW9dGaDn/cwIJE5NzIT766EHefO/yqnJdADuMpcAioekg2WW++1+8QUxWM+PXhxAp
      SEx8a5NTScSYnZkhEAwQCgYYGfcTicYwmUxYnV5OPdRMy5VrW06OW7OvjrM//TFHTjzC+bPv
      U1dTtap852+17jLG24coaixHNmzfb5fNYycSXCIWjmLZoEfpllFV4gkDpSX5CKOVghwPizGV
      /WXZxKI+jFYrhxq3Pqcq3PcQnxRWzpw+TWnzRzh+cHWdugB2EKqynO+/+dOPbGu9stGIr6YI
      f/coJYeq7v+GbcBgtlJUfOfOpxXnrf9Zl0VotW/dBV+SJKrqD1NVf3jNcn0ItIMIjM9iNBtx
      5Gx9bHw3hftLGe8Y3vZ60wkRmaele/V+li6AHcRoSz97DlYmZbkyu9THgn+e+FJs2+vWGlVR
      iMfjJBSB1ZxGp0TeSs8hSdIdqTok9Mx9H0SJJZjsGqXq4f1JqV82yGSX+fD3jN3cYMscTr/2
      Dc70BrBFpxkJCg6dfILPfnQ5OF7THiA4Ncy3fvAGiDjvn/4F598/w9jM7spYsFGm+ybwFudg
      cydvRz5/7x7G2gbvf+EOIxxe4tDJJ3j+qZMUVe9noKdjpUyzHkCocXpH5qgoziERmMBauJeD
      pTYuXZ+gMNuJqqopC6AQQmw5S4KQxZo2q6q6LRkYJrpGqDrWsKp+VVWRhUBd44SYB0EIgaIo
      5JT76HjjEpHFpaSkUdcqE8Xjz32a13/0OqfjRj77/ONMTd0+M00zAXRfO89CzMr0+DCluS4Q
      JoQAbg5/JElKYRbjbWjrpr1317MdnyMRjWMwGsirKvxgXRJIbK1+SVq202Qz4ynIJjg+R25l
      wZbqXLsdbca2XS2XmJhdoLymHofDS37ubY9QzQRQ0/QQ1cCVaxIFZdWMvn+OCzMyFfuakGUZ
      SZJS5pty6wHYUh2wps3bIYCFqQB7miow3TWBk2UZaTvEy227CxtKGW8fWltsW21FIwHUNz+M
      Oyef7730DcZD8OXnH14p00wAkiwjAc2Hltdnjzz0ofXfsEsRQhAYmyX/sez7X7wN5FUV0v1u
      G2pCzZiMETdaL9A/m+DXfvv3yfGs3lvQl0HTnGgoghAgb8NxoRvB4rBicdqYH51OSXvJR7Cn
      ogZTdIa//dpf8O7lrlWlugDSmJWEt0XZpHJtuLBuD2PtmREAdf6Nf+KPv/oNiouLiDqLefxI
      3apyXQBpzEq+/7ytHxb3IOTv3cPkjdGMSKPeePIj/NJDezl/4RIzwzdo7Vnt9ar7Am2ApWAY
      JZbAkeNK6URuaX4Rs8OC0WoilRl17FlOrE4rwYk5PIWpmXskC5sri0efepZHgaVQgNBdG926
      AO6DqqqMdwyjJhS8RdnkVOSnTATzYzPLxx1psHpSuL+Mic6RHS+AO7E5Pdwd46gPge5DyB/A
      ZDVRcbyWSCjCyLV+ErEUZFGLJwjPLeLI2XjKw+2ksK6EievDKYkR0BJdAOsghGBm0E9OmQ+D
      yUhxQxk2j4OhSz1EQsnNpLDgD+DyeTAYtVmKtHkcyEYDoenA/S/ewegCWIfF2QVkowGbd3nt
      WJIlcsp9+GqKGLnan7QD54QQzI/N4t5Avv9kceuzTqQoVFIrdAHcAyEEM/1+cu8a80uShDPX
      TcmhSmYG/Ez1jG+7j0tscfk8X5tL21Q0hfWlTHZm9jBIF8A9CM8vIlQVe5ZzzXKLw0ppcxXx
      aJyRq9s7LwhOzuFe46zfVOMuyCK2FMvo/KG6ANZACMHMwOTyoRPrrMAYjAaK9pfizHUz2jqw
      LUeQqopK0B/A7dP+MGuD0YCvuoipnnGtTUka+jLoGkSCYRLRxH1PXITlIVF2aR7mPInLL79H
      7YcaKD5Qvumly0gwjNG8fI6X1syP95GdN8/8cC/zns27RpgLG7A71u5JtUYzAYSD09zoGyUa
      jVLfdJD+9itEFImqukZyXNplpFv+9feTU5b3QJkXzHYLhz5xkvYfXmR+dIa6Zw5tagVnfmwW
      T2G2Zp6TqwhNkqP0Md9/HUve7KbzkEZyaz/wmpqIcv16G7I1n7qaIlovXyKSEJTvbSDgH6Wq
      qoK2tuvUNzRsOTnWemg2BLK5cjjQuB+7UbA0N0rcsYfmxloGBm5vwQshUvLvzrZi4SjRxQgu
      n/eB67BnOTnxhSeJR2Kc+4e3id5cKt1oHWpCYXF2AVeee10bN/L6Zj//3a8jgd3rJDQd3HL9
      txBCIMlGqmtrEPEoyuI0MauP5qY6hgaGWFpaYqjnOtlF5Ul9+EFLd2hJYqC3i6hqgEQC2eRA
      NhgQNzOHpTIiTFUF6s0vaLp/kuzSPIS0+ku7bx03o6oMZgMNzx1l9Go/v/ibN6g6VU7BBusJ
      +udxZLvAIK/Yc9tGZc1oM4QKW5x3CLH2vVZVFVUInHlu5kdmcOZvbl5y67u89W85bsKA8eaJ
      MSKRQDaZkAwGhKoSjcwzMCc4VLJvS59rI2gmgPnpCVSTA6spTNyaQ2Soi+uLFvIKK1J+RJIs
      L58fFVuKEgmEKawreeBgHEWSMBgMKzaXH63Fleeh99xl7KY5vMXrD2uEEATH5pwNq+kAAAjn
      SURBVMitzF/zuCNZNqx5RJIkyRikrXXk9zoiSZZlDLKMM8fNZNcoKOqmhkG3vkuDwbDy3SZi
      S4yOjuD3z1Bc0kB0qp3OqJ9s3x7CMwkOHa7iwtVrHDnajDGJvYBmAvBk5yGbFpDz83HYbPjc
      h1iKK7gc2p1HPDs4hbc4Z9uyruWU5yOZ9zP9yjssBRcp3Fdyz6XN+FKMRDyB3Zt+k0VJlrB7
      HSwFwhtaGNgIsmzE4/XR5PVhsdhoPnKIpaiCy+kg4fNgMJloPtRIsleCNZsDSLIBt8eL025D
      ksBkseJ2OjRLiRKPxAjNBPEUba/zl9FspOxwFbIsM3iph9g98u4E/fO4fV7N1/7XQpIkXD4v
      wcm5bdv5lo0mvFlZZGVlYTWbMJmtuF3L3/+tMxZMZgtykh8IfR/gJnPD03gKsjCat79TlGSZ
      /L3FeIuyGb7ax+JdqciFqhKcmMedn1q//wfBke1kKbiEULTJ7JAsdAEASkIhODlP1p7c+1+8
      SSRJwlucs+xl2THM7PDtdfXIwhKyUcZsT1Fi2k1gMBkxWUwsBTJrV1gXADA3PIMr34vRkvzj
      jexeB2VHqlmYnGesbRA1oTA/Nou3MDsthz934vJ5CPrntTZjW9n1AohHYsTCEXJK8+5/8TZh
      tJgoOVyJwWxi8HIvsXB02yaXycSZ617ZD8gUdr0ARq7148h2peTX/05kWcZXU0h2SS5Wtz3l
      7W8Gk9WMyWbOqFMld7UAErE4gxdu3NPjM9lIkoSnMBtfdaEm7W8Gd76XBX/mBMnsagGMtQ2m
      bOy/Hmnh97NBXL5lAWTKMGjXCkBJKPSduU71w/v1dOwPgNFsxGCUiYYiWpuyLexaAUx2jeDI
      ceMu0C7scCciSRKOHBcLU5kxDNqVAlAVhd7THdScathRw490weXzEprKjGHQrhTAdN8kRosJ
      b3GO1qbsSCwOC0IVxCM7/zglzQQghMpwfzc9A6OoQhCYnqCrd/ADbsDbjaqq9JxupzpJRw3t
      BiRZxpHrZnF6QWtTtoxmAggHZ7FmFWKJTjM8PkFb7yR5NoXOgYmktjsz4EdNKORU5Ce1nUzH
      7fMS9CcnLUwq0cwd2uHJRcz56Z6N0uBdYi6viOw8G71tIyiKD1VVSSS2NwObEIKeX7RT/tBe
      VKGiJpYdu1RVoGwxtYkqLwfE3G2zoihbrhuW5y1r1S2Lm0ExW0CIte+1qqr3tN3stBBbihKP
      xjHcx4Hw1neZqgCnB0EzAcSCk1zrmeT4sSPI8VkS/iCxCJis1qQFxMyPzhALRymqK0U23I7X
      vRUQsxXuDoi5hcFg2HLdAPI96k5FQMy9cGa7Cc8s3HcudWdATLqh2RAoEAhhNqq0t7UTEm6y
      LUu09Yyxt7okKe0JIeg53UH1w/WrHn6dzZNVkou0TcFDWqFZD5BXUkXeHc+6uza5k9IFf4DF
      mSCF9aVJbWc3YXXZsGqYwWM72NnyfQD6zl6n/FjttoU76mQGu+JpCM0EmRueovhAhdam6KQZ
      GS8AIQR9ZzopOViVlHBHnZ1NxgsgsrDEVM8Ypc3VWpuicwcitsC58xdpaesgmogzNjqBklhi
      YGgspXZk/E9i35nrlByqwmy3aG2Kzh2EZiaw5+6hdk8OFqNgZmaOef8wRXsPptSOjO4BoosR
      JjpHKD9Wo7UpOjdRbmb+s3gLsYsQrZcvMB2K4R/tZzZmxGNPcWReSltLMUOXeijaX5rW2RZ2
      G7c2OSNLS/iKSsl2W4nGFPKLKynNMtE/NpNSezJWAPGlGMNXeik/9sHMxDra43R7mBzqwegt
      oSjLRUlpESU19bhMglR6F+2IOUAoMEti8voDvScwPktRZYTo5BWikzd9/j178OaXJcFCnQdF
      Npqp3lu/8rfHu5wVIy8vebmZ1mJHCECNR7DPd2z8+oTC+JUb7GmqwDIfXHk9bLYDugB0bpOR
      Q6DAxDxWt11f+dG5L5oKIBGLEo0vu+HGIovMzQe3muoeVVWZHZ4it3z98710dEBDAcSXFmht
      vUTf4DSoES5easU/2kf/+NZWAUJTASx2CxbnznbS0kkNms0BTDYX9ftqGBxTiAcmsRVUUltq
      41L7GGX53lUBMRsOKhGCmcEpfLVFa15/ryAbPSDmwQNiHgQ9IOY+yCYzIhZDTZiQjYYPBMRs
      NKhkwR/AYDRg9zjWHP7cK8hGD4jZXEDMRtEDYtYgsjBHR2cPo6N9BFQP5sgEl9t6qKzYXECM
      UAUzg/77nu2ro3MnmvUAVlcWh5ofWvk7+9CRLdUXvnnohEOjPJ86O5OMWQadGfSTU+5L+xz7
      OulFxgjAne/FmZP+OfZ10ou0mARvB3qWN53NkDE9gI7OZtAFoLOr0QWgs6vRBaCzq9EFoLOr
      SRsBDHR3cOVqC0vx9PMX0dl+hBKj9doV2jp7ESQYH5tETURSnhUiLQQglqbxL1moryygq3dY
      a3N0UsBwTxe5ZfvwGhYZnwszPT1LZ1srnpzURoSlhQDi4RBmpxuL3U58KTMOX9NZn4VYArfN
      hMPuIByOLGeFiBrxOswptSMtBGBy57A0PcH89BROr0drc3RSgM9tZ2wqgH9mjiyv82ZWCCMD
      47MptSMtBCCZXOwrz2FiQaK2vEBrc3RSQG5pDZbYDPa8crIdVvaUFlJSsx+HQd2dWSGyfEVk
      +bS2QidVSJJMaeXtlDXemz2/z5faOYAkbh7yFA6HicXS59S/RCKxEqShKgmkWGjd64UQ940D
      UI1WDKblJFmqqiLfDPZQIiFkce/jmASC5ZrvXb9AQrK6kSRpVd0bsX0jCLML2WBY9TlVVYVo
      cB2rNnhfZBMGi2OlzpX7EltCVqLr27WB+m/ZnkgkbgbxpIfHblZWlrQigHRDUZSkRhAls/5k
      1y3LctIeop1s+4MiSVL6CkBHJ9lIkrTFYNKUI5ibmSKuCBCCod4uhiduZ5FYXAiiPGgMt1Dw
      Tz1YJgolFmYxEn/Ahm6zMD/NUmz1hl8kHCKWePAA9PGRAfr6+pgNLG7anrUQQjA9Mcq4f3ZT
      qWqCweD9L0oD/j/jRD2bQNP9SwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Health Expenditure vs Military Expenditure' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAASXklEQVR4nO3deWwc53nH8e/M7C53eZPifUmURFmUqNvxIZ+J7cRxmyCtHSBoACctEBQ9
      gB5IW6BHkBZB/0hRBGhapIFzIQnSNk0dJ3YSxI6vKJJs66JF8T4lHuK9S3LJPWfe/kEdZsIl
      udTsQc7z+Ufwzs7M+3j3x53ZnWdeTSmlEMKh9EwPQIhMSksAlpaW0rGbtJKatob1akpLAKLR
      aAq2qujvbKVn6PpvLOnvuMxC1EzBPm+ztybFpbdPMT4bBGCk9zLf/cGLxOLWjeVxWlvbbNzf
      6u64JmVx+fxZRqbmk1svFqL1Sved7TuB9WrasodAyozT0TNA++VWlILF+Vk6O7uYX4rg9vgw
      dJieGKWzq4eoaa2/wQyKByfpH5mi9d12zMgivzx9lj1NdzHvn2R+bo6p2SV8vhwAJseuMTh8
      nVhkiZ7uLq5P+TM8+tti4TkGro3S2tqGQjE5McG1wT6mZwP093YTDMcw4xF6u7uZX4ywGFpi
      ITDN7GIEX04OKMXYtUGujU0RDQfp6epkYibJMCVpywYgODWIUVCP11okEInx4+//F119/YxP
      +em+1MqSGWdoYIDRoXZe+sU7mR7umnqvtLH78D2E/NeJmRamaWGaJu3n3uCnr58lalpcvHiO
      0e7zvPrWFeZm/cxMjTM6dp0Xnv8/gpHUftpt1EhvBxVNxwkHxrGUxasv/YiRiUm++51vMzU6
      yMunL/H6T19gbMbPD59/gaHhfl7/1TnMeIgLl9rpuXSKs239+AN+ZieuMzo+wQv/+32WUlje
      lg1AR1sXiwvjhMNBLncN8+AHnqDQFaOzZwiAeHSRsck5autqiGX1sa2i9+oYI12XmJudYnxJ
      o66mgoPNzRguN4889kFqy4sBmJudpanlGC0Hmrja10dpVQ2+HBdmlnzCdfQOMTPUTmhukr6J
      IHnFlbzv7rvZ2biL+44fQikTfyCINyeHnXWVxHUfT3zog5QX5QHgD8xz8MhxDjQ1MjTYz46K
      anLdEEthea7UbTq1TF8pTz/+IJq1xJl3Ohmfn2UiEObuB3YTGrHwenx4CDEw6qe2ujbTw03I
      ioUo29XC/fccZ2HqKkOzAcoqa3AbsKOiBp97+W9UXV09+44d45WXX+EnfUUc3FXOubY2isuq
      cBtahqsAVIyiyr08+OC9RANjtI5MUV1Tjabp1FRXg9tLTfkOdu05yZtvXaKwvJ7G/AJcugbK
      RX1dFUcONfLyK6/SV1RLc+UOzl25QmllLe4Ulqel43eAQCBAcXFxqneTVlLT1rBeTVv2EEgI
      O0gAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJ
      AISj2R8ApZibnWbGP4/ccEhkO9s7wkKBUfrGIngjk0T3HqO6yGv3LoTDjM3PEYnHk1qnxJdL
      sc+37vNsD4BlxlFARUUxg8OTVBc1oJQinmQB2c40TakpTaaCCywlecsWA8h3u9etyfYA5O7Y
      SZM+jX9imMKSagA0TcPl2rLtx6syDENqShNDNzAMI7l1btSyXk22V6tUlJHhMUxXHgdriuze
      vBC2sj0Aup7DwSNH7N5sSkwtBombyd10piDHS35OTopGJNIt+z7v0mhiYZ6lWCypdeqKiiUA
      20AsbvGL8/3ODoBwpnA0zhe/d5oLPdflhzDhLEopfny6mws9yzdVlgAIR1EKXrs4eOu/JQDC
      UZRSTAVu3ytWAiAcRdM0SvJvX50gARCOomnwwOGGW/8tARCOomkazzzSTFNdKSABEA5UkJvD
      53//UX734WYJgHCmfJ+HTz15RAIgnE0CIBxNAiAczf7Loa04nVeuEFEuDrYcxJMN81cJkYDt
      nwAR/wixvBoaS3WGJoN2b14IW9n+CWDkljDf0UYHiv3H9wJkbUukaS3Px5vUOjda7LK1ffBO
      ZGtNpmWm7HWyPQDBmTGKapqocc8wOjFH6e7yrG2JNHQ9Za12W1G21pTKlkjbD4GKa/dT6Y0Q
      1EtoaSyze/NC2Mr2uGuaRmVtw/pPFCILyNegwtEkAMLRsu+MR2QlpdSNfwENNJYPd7c6CYBY
      Vzga58XT3bx2cYjJwCIlBV4eOryTpx9uJj/Xk+nh3REJgFhTLG7duoPCTVOBJZ7/ZSftg5N8
      7tOPkO/buiGQcwCxpl+c71/x5n+v7uEZfniqK80jspcEQKzpV23X1l5+ee3l2U4CINY0uxBe
      c7l/IZSmkaSGnANsM3PhUNL30ve63BR6V5/Hoao0n7HphYTrVpXmJ7WvbCMB2GamgkFmQ0vr
      P/E9duTmJQzA4ycauZjgHADg8bt3J7WvbCOHQGJN97fU89R9e1ntG/8HWup58p69aR+TneQT
      QKxJ1zQ+89snOLS7ktcuDjLpX6S00MdDh3fyyNGduIyt/TdUAiDWpesaJ1vqOdlSn+mh2M72
      AEQX5+jqv8rC5DAl++7nQEOp3bsQwja2B8CTV8Thw4e4cC7CvroSYPk6kmQ7etLBshSWZSW5
      znIXmbWJbrJ0sJSVdE1qG9a00dcpJYdAizNj5JRU49KXT500TcvKC6c2M66b60hN6aORuppS
      EADFtbFpmg4cXvGormffyZKmJX9Fo6Zp6Lp+699ss5k3C9le0yZDvZGaUhAAjeZDW2OSPCGy
      L+5CpJF8DZoC/oUQbQOT+BdCVJUWcGh3Bbled6aHJVYhAbCRUoo3Wq/y9Z9cZGEpeuvxqtJ8
      /vzj99K8szyDoxOrkUMgG7X2jvPvz7+z4s0PMD4b5AvfPsX4rNwpL9tIAGyilOIHb3YSN1f/
      vjoYivLSmZ40j0qsRwJgE9NS9I3OrPmc7mtrLxfpJwGw0XrfVWfhV+yOJy+JTQxd466GtW8F
      eWCXnARnGwmATTRN4xPvP0iOe/WbuJYW+vjIybvSPCqxHgmAjfbvLOOznzhJWVHuisd3Vxfz
      D88+TGmhL0MjE4nI7wA20jSNe5praWmsoGd4Bn9w+YewPTUleBJ8MojMkgCkQK7XzdGmqkwP
      Q2yAHAIJR7M9AEpZ9HS0cfnddiJJNjEIkW62HwItTg8xb+XSUFuKJwubK4R4L/vnCPPPonuq
      WZocoC+2l6bqIpkkL402M6GcZW2/mjI2Sd6OukaGOsbQ8g2MGz99yiR56bOZCeV0ffvVtNHX
      yfZq3bmlHNqnsxiD8i1+2zyx/aWkJTKvsIQ8+zcshO3ka1DhaBIA4WgSAOFoEgDhaBIA4WgS
      AOFoEgDhaGsGIBz08/obb9Le1s5STC5sE9vPmgH4xlf/k1BkkcsX3uRCv9zRQGw/a/4S3LSr
      hjNvv838osVDHyuwfeeL4Sgvnu7hXNcYi+EoDZVFfOT+fRzaU2n7voRYzZoBOPHwh9h3Ioym
      65T67L1qIrAQ5u++9hojU/O3Hrs+E+Rc5xif/vARPvrAXVl5r3qxvax5CDQy1Ed7Rwff+9pX
      GJhOburNtSil+PpPL614899kKcV3Xr7M0HjAtv0JkciaAdB0HV3XyfUZBEOxjW1RKWLRCJFI
      BMtSqz5lbjHChe6xhJuIxS1OvXttY/sT4g6sHgBlEfDP4PEVUF5ezqMf/SRHdxZvaIPKMjl7
      5jRDQ0OEYqs3MSwsRViKrB2oCf/ihvYnxJ1Y/cDeMrnw9hkCi7fvclxa1UDdjvUvclYqio6L
      UCiKcWMO2V/vCPO6dXLcLsLRxJ06JQU5Ke9OMi0LM8m+5ZsdRpZlZWn3VPI13ewIy9aaLMtM
      /nW6Uct6Na0eAMPNY09+hJ//8L8JaD7U4hz6BidEVpbOiZP3YwWu0X11miN7KtA0bUVHT1lx
      Po+faOSls72rbqMg18OT9zYl3QWULEPX0ZM80dZvdJHpm+gmS4fN1WRkdU36JmoyNvg6rfnV
      Tlf/CIdPHGNqdoChqSVqite/s5mmwdXeHmLKoHl/+XseX1nAp548ysx8iLPtIyseL8j18Bcf
      v4+68sJ192WHzc4+uJl102Uz48rumjY3e+VGakoYADMe59lPP4uma1xQbo43lmxop7rby/4D
      B9d9nsdt8NlPnORS7zjnu8dYCkdpqCji/ccaKSvOXXd9IeyQMADnf/Uy59qHqK7bxfHjx3Dr
      9v9lcBk679tfw/v219i+bSE2IuGB/b2PPsWf/PEf0lSVy5e+8LdcHJBLIcT2k/AT4O3XXuSt
      K4PUNe7jb/7pX6ku39ghkBBbScIA3P3wh7nnAy6y8ZRICLskDICRhTdIEsJu0hAjHE0CIBxN
      AiAcTQIgHE0CIBxNAiAcTQIgHE0CIBwtJQEIzU/zxulzrN4QKUT2SMkskX0DI+S45SIKkf1s
      v95hYqgbd3EV1mg/sbiJx2XIJHlpJJPk3VgnU5Pk+Yp2sOhfIBCYIxSO4ck3ZJK8NJJJ8m6s
      k6lJ8opKKygqraC+vh63x2P35oWwVcri7pE3v9gC5GtQ4WgSAOFoEgDhaBIA4WgSAOFoEgDh
      aBIA4WgSAOFoEgDhaBIA4WgSAOFo2Xfp3yYopSCygDnVBZqOUb4fPHlZeq97kU1sD4CKR+nt
      6yOuedjXtAdXCm6rvmJ/ZpTo2a8QvfRtiEeWH3T78NzzGTwn/gDN2BYZFymSkkOgul17qXAv
      MTAZTMXmb1FKETn1JaLnnrv95geIhYie/jei73wVlDRmisRs//OoudzMDvdypXeCh96/PFNM
      qjrCLP8gscv/k3B59MK30Js/hpa/+szz0hG2TDrCbBQLhymr3c0jBW66r05xtKkqZR1h0YnL
      YEYTPyEWgsl2XMW1qy6WjrBl0hFmK4vBvi4wvBzcW2H/5t8rvsab/6a1AiIcz/YAuL15NB9o
      sXuzqzIqmkHTQSWYQ1Yz0Mv3p2UsYmva0r8D6FUtGA33JVzu2vsYemljGkcktpotHQBNd+H9
      0D9j1B7/9SUYOx/A+9jn0PTsm/hZZI/sO+NJkp5Xhu+Zb2BePYt5/d3lH8JqjmE03Iumbel8
      izTY8gGA5U8CV+NDuBofyvRQxBYjfyKFo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNt
      ix/CtitlmajIPFgWmrcAzZBbztvN9gBY8SWuXOkhHo9QvecQ1SW5du9i+1OK+Oh5ome+jDnZ
      CWYcvbgB94lncR/4HTRdPrjtYn9HmOGl5fARpq914g+GbgVAZWlrYrLjUkrdWidVNZlDpwi9
      9JcQD996zJrtJ/LK51ELE3ju+6N1x5isVNd0Z1TKakrBIZBGX0cr8ZwdNO8svTWAZFva0sGy
      LKwk/8daN9oorU20U25sB3FCr35hxZv/NkX0nefQ9jyR8DJvMxtrukOpfJ1sD0A8OE7H1Vnu
      2u0lsBCmpNCXtZPk6bqOkeThxM0WO13XU1KTOdENC2OJn2DFYPgMroqm1ce3iZpu1pKqmu6U
      rhsYenLB3GhNtlfryq/ktz5YtjyIJPs4BaiQf/3nhANpGIkz2H8OoOm43XKStll6ya4NPEe6
      3Owi79QsoxXWYux6MPHyvApcex5N34C2uew74HM4TdPwPvGPhH70p1iTnSuX5Zbifepf0HIK
      MzS6O6PMKPGBN4kPvAGRBfSKA3iO/V5G65EAZCE9v5LcZ75JrONHmMNvo+IRjKoW3C1PoxfW
      ZHp4m6JiYcI/+yvi/a/ffrD/NeI9P8P30S+jFzdkZFwSgCyl5eTjOfZJOPbJTA/lzilF5K3/
      WPnmv8Ga6Sf887/H98zX0Qx32ocm5wAi5VQ0SLzjxwmXm2MXf+NwL10kACLlVMiPCq391a01
      O5Cm0awkARCp58oB1zoX8nmL0jOWXyMBECmn5ZVjVCa+XabmLcaoPpLGEd0mARApp2k6OY/8
      NXjyV1lo4Hngz9B9JekfGBIAkSZGRTO5H/8mRv294M4FzUArqsf71BfxHHoGMjSdlXwNKtLG
      qGjG9/RzqKUZiEfQfCVonryMjkkCINJK03S0vPJMD+MW2w+BlFKMX+tnbHre7k0LYTv7A2BG
      sBQEFlI7QZ4QdrD9EEh3eakoK2Zu8vasjamaJO9OySR5y2SSvBTL1o4wmSRvmZMnybP9ECge
      XqCjf4TI/BQzc4t2b14IW9nfEukt4PDhzPyqJ0Sy5Icw4WgSAOFoEgDhaBIA4WgSAOFoEgDh
      aBIA4WgSAOFoEgDhaLb/EqwskyvvthI2NQ4dPYrXJRkT2cv2d2ckMAqF9RzZU0b30LTdmxfC
      VrYHwIxFcOV4cXu9xCOR9VcQIoNsD4CvtIa54W7aOgaor6+we/NC2Mr+hhh3HseOHiBqaeTn
      5ti9eSFs9f+9HH8YkNbWXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot Matrix' width='192'>
      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
      I8LPr4cGI6cAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
